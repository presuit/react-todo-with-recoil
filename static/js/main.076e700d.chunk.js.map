{"version":3,"sources":["atoms.tsx","components/CreateCustomCategory.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["categoriesState","atom","key","default","categoryIndexState","toDoState","toDoSelector","selector","get","toDos","categoryIndex","filter","toDo","CreateCustomCategory","useRecoilState","categories","setCategories","useForm","register","reset","handleSubmit","onSubmit","customCategory","find","item","toLowerCase","replaceAll","trim","newCategory","toUpperCase","localStorage","setItem","JSON","stringify","prev","placeholder","required","minLength","CreateToDo","todos","setToDos","useRecoilValue","setValue","newTodo","text","id","Date","now","oldToDos","ToDo","useSetRecoilState","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","diff","slice","map","index","ToDoList","useState","loading","setLoading","setTodo","setCategoryIndex","useEffect","localCategories","getItem","todo","parse","loadDataFromLocalStorage","value","onInput","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.076e700d.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport const categoriesState = atom({\n  key: \"categories\",\n  default: [\"TO_DO\", \"DOING\", \"DONE\"],\n});\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  categoryIndex: number;\n}\n\nexport const categoryIndexState = atom<number>({\n  key: \"categoryIndex\",\n  default: 0,\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const categoryIndex = get(categoryIndexState);\n    return toDos.filter((toDo) => toDo.categoryIndex === categoryIndex);\n  },\n});\n","import { useForm } from \"react-hook-form\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { categoriesState } from \"../atoms\";\r\n\r\ninterface IForm {\r\n  customCategory: string;\r\n}\r\n\r\nfunction CreateCustomCategory() {\r\n  const [categories, setCategories] = useRecoilState(categoriesState);\r\n  const { register, reset, handleSubmit } = useForm<IForm>();\r\n\r\n  const onsubmit = ({ customCategory }: IForm) => {\r\n    const duplicateValidate = categories.find((item) => {\r\n      const a = item.toLowerCase().replaceAll(\" \", \"-\");\r\n      const b = customCategory.trim().toLowerCase().replaceAll(\" \", \"-\");\r\n      return a === b;\r\n    });\r\n\r\n    if (!duplicateValidate) {\r\n      const newCategory = customCategory.replaceAll(\" \", \"_\").toUpperCase();\r\n\r\n      localStorage.setItem(\r\n        \"CATEGORIES\",\r\n        JSON.stringify([...categories, newCategory])\r\n      );\r\n\r\n      setCategories((prev) => [...prev, newCategory]);\r\n      reset();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onsubmit)}>\r\n        <input\r\n          placeholder=\"custom category\"\r\n          {...register(\"customCategory\", { required: true, minLength: 3 })}\r\n        />\r\n        <button>Add Category</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCustomCategory;\r\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoryIndexState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const [todos, setToDos] = useRecoilState(toDoState);\n  const categoryIndex = useRecoilValue(categoryIndexState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    const newTodo = { text: toDo, id: Date.now(), categoryIndex };\n\n    localStorage.setItem(\"TODOS\", JSON.stringify([newTodo, ...todos]));\n\n    setToDos((oldToDos) => [newTodo, ...oldToDos]);\n    setValue(\"toDo\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoriesState, IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, categoryIndex, id }: IToDo) {\n  const categories = useRecoilValue(categoriesState);\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, categoryIndex: +name };\n      const diff = [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n      localStorage.setItem(\"TODOS\", JSON.stringify(diff));\n      return diff;\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {categories.map((item, index) => {\n        if (categories[categoryIndex] !== item) {\n          return (\n            <button key={item} name={`${index}`} onClick={onClick}>\n              {item}\n            </button>\n          );\n        }\n      })}\n    </li>\n  );\n}\n\nexport default ToDo;\n","import React, { useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport {\n  categoriesState,\n  categoryIndexState,\n  toDoSelector,\n  toDoState,\n} from \"../atoms\";\nimport CreateCustomCategory from \"./CreateCustomCategory\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const [loading, setLoading] = useState(true);\n  const toDos = useRecoilValue(toDoSelector);\n  const setTodo = useSetRecoilState(toDoState);\n  const [categories, setCategories] = useRecoilState(categoriesState);\n  const [categoryIndex, setCategoryIndex] = useRecoilState(categoryIndexState);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    const targetIndex = categories.findIndex(\n      (item) => item === event.currentTarget.value\n    );\n    setCategoryIndex(+targetIndex);\n  };\n\n  const loadDataFromLocalStorage = () => {\n    const localCategories = localStorage.getItem(\"CATEGORIES\");\n    const todo = localStorage.getItem(\"TODOS\");\n    if (localCategories) {\n      setCategories([...JSON.parse(localCategories)]);\n    } else {\n      localStorage.setItem(\"CATEGORIES\", JSON.stringify([...categories]));\n    }\n    if (todo) {\n      setTodo([...JSON.parse(todo)]);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    loadDataFromLocalStorage();\n  }, []);\n\n  if (loading) {\n    return <div>Loading from localStorage...</div>;\n  }\n  return (\n    <div>\n      <h1>To Dos</h1>\n      <hr />\n      <select value={categories[categoryIndex]} onInput={onInput}>\n        {categories.map((item) => (\n          <option key={item} value={item}>\n            {item}\n          </option>\n        ))}\n      </select>\n      <CreateCustomCategory />\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}